<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA6VJREFUeF7t2D1O60AUBWA2wyYo6d4SkKgRC6BgBVQUFKwAWACiSENHQ58WUdDR
        IKVAoqB4L2N7/HNmfHJnHLDjd0ZfwUlMIl/N3Blnb+/mXawwC4FZCMxCYBYCsxCYhcAsBGYhMAuBWQjM
        QmAWArMQmIXALARmITALgVkIzEJgFgKzEJiFwCwEZiEwb9XJ29/4WH0eBBfvAMzbcLD8roqycexW1TAP
        9PRVVSFp7ErJMOf7uFpV9541vq8e4AOnB3Om1aK65wFj+vMLcw42pxZPcLHT09S+ToIrpwVzup4tz7Ks
        YD7OvljRjv62wsuI5hNmXqxYq0qqVKX4nHn3rFjrmfzsGAJzgsi0irbz+cBsF3araa2j1+Oju9s/HWcX
        cE0izGbhJjidaXV4Wlbn8bB5sa7d/fF1/WIizFbhGpxKt6oqdfS83/dWdr0wGz18vlQ18iNnE9y+/fN7
        Wo7lmXv37vZ0GbxlgNkm3Adflh9wzRh8LWLTqjRocmG2CRrW9h+D3VekztaLx6IQbOL4qZfV7DHb5Ber
        vX7p7plRrLoQl+ev8FbDF5Rd0wezSfjkbOvu7rTRlHW9lsniHVIsNmvGL5bphOU20PjxojXd6gs6xYpd
        EPL9aFozKzg3WIrlbjg6AVcL/+9u3/B/t4rlvs7Pwebi0DSXYVax3BrctFpbBW2KZfnHUkKD/73dcMvF
        6h5EYsWyfL5jPzq0D/dmmE3yGnxPz2oXceDM2lyLqpo5a3ANs0nmbljMoGA3bNXCFSgslrlnOdfPl0U5
        4htitU5/93GnuKv2sJ6zOivO33b9aS/Lz0WkWO3dcPMXVZMr1rbKtzKn1Rpmm6BYo//k4NaXr0K51sLp
        U7zu21nR6RM7F2abbkt2Y+xnw+IXmLqvl4uxO7mK6tQVLH+x+ZVitU+J1bBuWD8k8lNftxZ+o2zr3zTj
        MFsFpwf74+HPqI/vLZuKlfpDDWazsG2NvRJ/HmY7t+XDsJ6GdhXmBOFKbG32s4Q5RbgnrkfeYiwW9eQn
        JuY0scmVWq+UA+fIMKeKdK5imE4S8Ng0+2L1LEY/eu4/XuL/oFhr4TEia8y8ZzXo/DKNsZ8uDTAPET4D
        GcfIj0pmmIfra/nRsStlKmHeIlK1HT27YhYCsxCYhcAsBGYhMAuBWQjMQmAWArMQmIXALARmITALgVkI
        zEJgFgKzEJiFwCwEZiEwC4FZCMxCYBYCsxCYhcAsBGYhMAuBWQjMQmCWPjfv/wB8xvDg2GvRGwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>